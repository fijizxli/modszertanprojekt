#Note in theory gitea.whatever should be replaceable with github.whatever
name: Build and store production containers
run-name: ${{ gitea.actor }} is building container images 🚀
on: [push]

# based on
# https://docs.gitea.com/usage/actions/quickstart and
# https://www.dev-hub.eu/2023/09/20/building-and-pushing-a-docker-image-with-gitea-actions-and-buildah/
#  https://github.com/redhat-actions/buildah-build
#  https://github.com/redhat-actions/push-to-registry
jobs:
  info:
    runs-on: ubuntu-22.04
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ gitea.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by Gitea!"
      - run: echo "🔎 The name of your branch is ${{ gitea.ref }} and your repository is ${{ gitea.repository }}."
      - run: echo "💡 The ${{ gitea.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - run: echo "🍏 This job's status is ${{ job.status }}."
  lint:
    runs-on: ubuntu-22.04
    steps:
      - name: fix distro
        run: |
          set -x
          # https://stackoverflow.com/questions/41032744/unable-to-edit-etc-resolv-conf-in-docker-container/57606548#57606548
          echo "$(sed 's/10.89.0.1/10.89.1.1/' /etc/resolv.conf)" > /etc/resolv.conf
          echo '/nix/var/nix/profiles/default/bin' >> $GITHUB_PATH
          mount -t overlay overlay -o lowerdir=/nix/store:/nix/store-host /nix/store
          nix-env -iA nixpkgs.actionlint && nix-env -iA nixpkgs.shellcheck
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: List files in the repository
        run: |
          ls ${{ gitea.workspace }}
      - name: lint-actions #TODO clean stuff up enough to make this usable
        run: actionlint .gitea/workflows/*.yaml || true
      - name: code-quality
        run: components/fincsi_backend/scripts/tests/shellcheck.bash
  test:
    runs-on: ubuntu-22.04
    steps:
      - name: fix distro
        run: |
          set -x
          # https://stackoverflow.com/questions/41032744/unable-to-edit-etc-resolv-conf-in-docker-container/57606548#57606548
          echo "$(sed 's/10.89.0.1/10.89.1.1/' /etc/resolv.conf)" > /etc/resolv.conf
          echo '/nix/var/nix/profiles/default/bin' >> $GITHUB_PATH
          mount -t overlay overlay -o lowerdir=/nix/store:/nix/store-host /nix/store
          nix-env -iA nixpkgs.postgresql
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: List files in the repository
        run: |
          ls ${{ gitea.workspace }}
      - name: python-unit-tests
        run: |
          cd components/fincsi_backend/
          podman run -dit --rm -p 8001:5432 -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres -e POSTGRES_DB=fincsidb postgres
          # TODO dont know a short quick way to do this other than waiting...
          sleep 5
          nix-shell default.nix -A shell --run "python manage.py test -v 3"
      - name: python-unit-tests-cleanup
        run: podman stop -a
      - name: react-unit-tests
        run: |
          cd components/fincsi_frontend
          npm install
          CI=true npm test -- --passWithNoTests
      - name: end-to-end-tests # TODO bash scripted compose bringup, check database gets data
        run: true
      - name: tooling-integration-tests
        run: |
          cd components/fincsi_backend/
          nix-shell default.nix -A shell --run "scripts/tests/testenvs.bash"
  build-images:
    needs: test
    # The image used is from https://github.com/catthehacker/docker_images , though the images recommended by distrobox may also be of interest (the image has to be set up in the runner)
    runs-on: ubuntu-22.04
    steps:
#      - name: fix distro
#        run: |
#          set -x
#          # https://stackoverflow.com/questions/41032744/unable-to-edit-etc-resolv-conf-in-docker-container/57606548#57606548
#          echo "$(sed 's/10.89.0.1/10.89.1.1/' /etc/resolv.conf)" > /etc/resolv.conf
#          apt-get -y update
#          #apt-get -y install nix # for the checkout action (note this may be the "wrong" version)
#          curl -L https://nixos.org/nix/install | sh -s -- --daemon --yes
#          echo '/nix/var/nix/profiles/default/bin' >> $GITHUB_PATH
#          git config --global http.sslVerify false
#          mkdir -p /etc/containers
#          echo '{"default":[{"type":"insecureAcceptAnything"}],"transports":{"docker-daemon":{"":[{"type":"insecureAcceptAnything"}]}}}' > /etc/containers/policy.json
#          echo -e '[registries]\n[registries.search]\nregistries = ["docker.io", "quay.io"]\n' > /etc/containers/registries.conf
#      - name: add system deps
#        run: |
#          nix-daemon & sleep 1;
#          nix-env -iA nixpkgs.nodejs && nix-env -iA nixpkgs.buildah
      - name: fix distro
        run: |
          set -x
          # https://stackoverflow.com/questions/41032744/unable-to-edit-etc-resolv-conf-in-docker-container/57606548#57606548
          echo "$(sed 's/10.89.0.1/10.89.1.1/' /etc/resolv.conf)" > /etc/resolv.conf
          echo '/nix/var/nix/profiles/default/bin' >> $GITHUB_PATH
          mount -t overlay overlay -o lowerdir=/nix/store:/nix/store-host /nix/store
          # Buildah complains?
          mkdir -p /tmp/pls /root/.cache/pip
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: List files in the repository
        run: |
          ls ${{ gitea.workspace }}
      - name: Build image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: djangofalatok
          tags: latest ${{ gitea.sha }}
          containerfiles: |
            ./components/fincsi_backend/Dockerfile
          context: ./components/fincsi_backend
          #TODO dont explicitly referto the runner user
          #TODO the lib/containers mount workaround is only for the docker pull attempt and shouldnt even be necessary, why is podman trying to check docker too? https://github.com/containers/buildah/issues/5167 #TODO this isnt actually fixing the prblem
          extra-args: |
            --volume=/root/.cache/pip:/root/.cache/pip
            --volume=/tmp/pls:/var/lib/containers

      - name: Push to kolmogorov registry
        id: push-to-kolmo
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          #TODO kind of funky that gitea makes use handle packages though the owner and cant deal withh it per repo?
          registry: p.p2.kolmogorov.space:64743/modszproj
          username: actionsautomation
          password: ${{ secrets.actionsautomation_pat }}
          tls-verify: false

      - name: Print iamge URL
        run: echo "Image puhed to ${{ steps.push-to-kolmo.outputs.registry-paths }}"
#  deploy: #TODO
#    needs: build-images
#    runs-on: ubuntu-22.04
#    steps:
#      - name: Check out repository code
#        uses: actions/checkout@v3
#      - name: List files in the repository
#        run: |
#          ls ${{ gitea.workspace }}
#      - name: trigger-remote-image-pull
#        run: true
